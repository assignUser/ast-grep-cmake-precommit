id: avoid-add-compile-options
snapshots:
  ? |
    # Conditional directory-wide options - still should trigger
    if(MSVC)
        add_compile_options(/W4)
    else()
        add_compile_options(-Wall -Wextra)
    endif()
  : labels:
    - source: add_compile_options(/W4)
      style: primary
      start: 73
      end: 97
  ? |
    # MSVC style options
    add_compile_options(/W4 /O2)
  : labels:
    - source: add_compile_options(/W4 /O2)
      style: primary
      start: 21
      end: 49
  ? |-
    # Mixed usage - still should trigger
    add_library(mylib src/lib.cpp)
    add_compile_options(-fPIC)
    target_compile_options(mylib PRIVATE -Wall)
  : labels:
    - source: add_compile_options(-fPIC)
      style: primary
      start: 68
      end: 94
  ? |
    # Mixed usage - still should trigger
    add_library(mylib src/lib.cpp)
    add_compile_options(-fPIC)
    target_compile_options(mylib PRIVATE -Wall)
  : labels:
    - source: add_compile_options(-fPIC)
      style: primary
      start: 68
      end: 94
  ? |
    # Using variables
    set(WARNING_FLAGS -Wall -Wextra)
    add_compile_options(${WARNING_FLAGS})
  : labels:
    - source: add_compile_options(${WARNING_FLAGS})
      style: primary
      start: 51
      end: 88
  ? |
    add_compile_options(
        -Wall
        -Wextra
        -O2
    )
  : labels:
    - source: |-
        add_compile_options(
            -Wall
            -Wextra
            -O2
        )
      style: primary
      start: 0
      end: 52
  ? |
    add_compile_options(-Wall -Wextra -Wpedantic)
  : labels:
    - source: add_compile_options(-Wall -Wextra -Wpedantic)
      style: primary
      start: 0
      end: 45
  add_compile_options(-Wall):
    labels:
    - source: add_compile_options(-Wall)
      style: primary
      start: 0
      end: 26
  ? |
    cmake_minimum_required(VERSION 3.10)
    project(TestProject)
    add_compile_options(-std=c++17)
  : labels:
    - source: add_compile_options(-std=c++17)
      style: primary
      start: 58
      end: 89
